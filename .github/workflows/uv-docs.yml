name: Build Documentation (using UV)

on:
  workflow_call:
    inputs:
      version:
        description: 'Version number for the documentation'
        required: true
        type: string
      build-pdf:
        description: 'Whether to build the PDF version of the documentation (much faster if not)'
        required: false
        type: boolean
        default: true
      pdf-name:
        description: 'Name of the PDF file to generate'
        required: true
        type: string
      docs-folder:
        description: "The path to the docs folder from the root of the project, defaults to docs"
        default: docs
        required: false
        type: string
      makefile:
        description: "The makefile to use, defaults to Makefile"
        default: Makefile
        required: false
        type: string
      lfs:
        description: "Whether to pull LFS files, defaults to false"
        required: false
        type: boolean
        default: false

jobs:
  build-docs:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          lfs: ${{ inputs.lfs }}

      - name: Install uv
        uses: astral-sh/setup-uv@v3
        with:
          version: "0.6.x"

      - name: Set up Python
        run: uv python install

      - name: Install system dependencies for LaTeX
        if: ${{ inputs.build-pdf }}
        run: |
          sudo apt-get update
          sudo apt-get install -y \
           texlive-latex-recommended \
           texlive-latex-extra \
           texlive-fonts-recommended \
           texlive-fonts-extra \
           latexmk

      - name: Create version file
        run: echo "${{ inputs.version }}" > .version

      - name: Extract project name from conf.py
        id: project-name
        run: |
          PROJECT_NAME=$(python -c "
          import sys
          import re
          sys.path.insert(0, '${{ inputs.docs-folder }}')
          
          # Read conf.py and extract project name using regex
          try:
              with open('${{ inputs.docs-folder }}/conf.py', 'r') as f:
                  content = f.read()
              
              # Look for project = 'value' or project = \"value\"
              match = re.search(r'project\s*=\s*[\'\"](.*?)[\'\"]', content)
              if match:
                  project_name = match.group(1)
                  print(project_name.lower().replace(' ', '-'))
              else:
                  print('no-name')
          except Exception:
              print('no-name')
          ")
          echo "name=$PROJECT_NAME" >> $GITHUB_OUTPUT
          echo "Extracted project name: $PROJECT_NAME"

      - name: Build HTML documentation
        run: make -f ${{ inputs.makefile }} -C ${{ inputs.docs-folder }} html

      - name: Upload HTML documentation
        uses: actions/upload-artifact@v4
        with:
          name: documentation-${{ steps.project-name.outputs.name }}-html-${{ inputs.version }}
          path: docs/_build/html/
          retention-days: 30

      - name: Build PDF documentation
        if: ${{ inputs.build-pdf }}
        run: make -f ${{ inputs.makefile }} -C ${{ inputs.docs-folder }} latexpdf

      - name: Rename PDF with version
        if: ${{ inputs.build-pdf }}
        run: |
          PDF_DIR="${{ inputs.docs-folder }}/_build/latex"
          ORIGINAL_PDF="${{ inputs.pdf-name }}"
          # Extract filename without extension
          PDF_BASE=$(basename "$ORIGINAL_PDF" .pdf)
          # Create new filename with version
          NEW_PDF="${PDF_BASE}-${{ inputs.version }}.pdf"
          # Rename the PDF file
          mv "$PDF_DIR/$ORIGINAL_PDF" "$PDF_DIR/$NEW_PDF"
          echo "new-pdf-name=$NEW_PDF" >> $GITHUB_OUTPUT
        id: rename-pdf

      - name: Upload PDF documentation
        if: ${{ inputs.build-pdf }}
        uses: actions/upload-artifact@v4
        with:
          name: documentation-${{ steps.project-name.outputs.name }}-pdf-${{ inputs.version }}
          path: "${{ inputs.docs-folder }}/_build/latex/${{ steps.rename-pdf.outputs.new-pdf-name }}"
